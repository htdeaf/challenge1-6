# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ba_doVEnV4AFrCSD6CKuD93pnXMT4oIl
"""

notes = [12, 4, 14, 11, 18, 13, 7, 10, 5, 9, 15, 8, 14, 16]
somme=0
liste=[]
for number in notes :
    somme=somme+number
moyenne=somme/len(notes)
print(moyenne)
for number in notes :
    if number>moyenne :
       liste.append(number)
print(liste)

"""| Action             | Méthode        | Résultat typique                      |
| ------------------ | -------------- | ------------------------------------- |
| Diviser en mots    | `split()`      | `['Bonjour', 'tout', 'le', 'monde']`  |
| Diviser en lettres | `list(chaine)` | `['B', 'o', 'n', 'j', 'o', 'u', 'r']` |
phrase = "Bonjour tout le monde"
mots = phrase.split()
phrase = "Bonjour"
lettres = list(phrase)
"""

Ch1 = "Le langage Python est très populaire"

Ch2 = "Python est un langage puissant"
mots1=Ch1.split()
mots2=Ch2.split()
Chcommuns=[]
for i in mots1:
    for j in mots2:
      if i==j :
         Chcommuns.append(i)
print(Chcommuns)

"""La méthode .sort() modifie une liste existante en la triant selon un certain ordre.
Tri décroissant :
nombres.sort()
Tri décroissant :
nombres.sort(reverse=True)
"""

stock = ["Stylo", 25, "Classeur", 100, "Crayon", 12, "Surligneur", 40, "Feutre", 5]
print(stock)
chaînes=[]
valnumé=[]
for var in stock :
    if isinstance(var, str):
        chaînes.append(var)
    elif isinstance(var, int):
         valnumé.append(var)
print(chaînes)
print(valnumé)
chaînes.sort()
print(chaînes)
valnumé.sort(reverse=True)
print(valnumé)



Liste = ["Stylo", 25, "Classeur", 100, "Crayon", 12, "Surligneur", 40, "Feutre", 5]
def rechercheElement(element):
    if element in Liste:
        return Liste.index(element)
    else:
        return False
rechercheElement("sara")

L = [7 , 23 , 5 , 23 , 7 , 19 , 23 , 12 , 29]
def NombreOccurrences(a):
    occurrences=0
    for num in L:
        if num==a:
           occurrences=occurrences+1
           print(occurrences)
NombreOccurrences(5)